.cta {
	@include cta;

	body.is-dark &, body.is-dark.has-cards .card &, body.is-light.has-cards & {
		@include cta-colors($colors-dark);
		@include cta-text-colors($colors-dark, $property: stroke);

		&--is-secondary {
			@include cta-colors($colors-dark, $suffix: "-light");
		}

		&--is-inverted {
			@include cta-text-colors($colors-dark, $property: background-color);
			@include cta-background-colors($colors-dark, $property: color);
			@include cta-background-colors($colors-dark, $property: stroke);
		}
	}

	body.is-light &, body.is-light.has-cards .card &, body.is-dark.has-cards & {
		@include cta-colors($colors-light);
		@include cta-text-colors($colors-light, $property: stroke);

		&--is-secondary {
			@include cta-colors($suffix: "-light");
			@include cta-transition;
		}

		&--is-inverted {
			@include cta-text-colors($colors-light, $property: background-color);
			@include cta-background-colors($colors-light, $property: color);
			@include cta-background-colors($colors-light, $property: stroke);
		}
	}

	&--is-inverted {
		@include cta-transition;
	}

	&--is-transparent {
		background-color: transparent;
		box-shadow: none;
		border-style: none;
	}

	&--is-compact {
		padding: $spacing-tiny $spacing-small;
		min-width: unset;
	}

	&--is-square {
		padding: 50% 0%;
		height: 0;
		line-height: 1;
		text-align: center;
		border-radius: $default-border-radius;

		&__heading {
			display: block;
			font-size: 2rem;
			text-transform: capitalize;
			padding: 0 0.35rem;

			@include media ("<tablet") {
				font-size: 1.5rem;
			}
		}

		&__main {
			font-size: 1.15rem;
			padding: 0 $spacing-small;
			font-weight: 700;

			@include media ("<tablet") {
				font-size: 1rem;
			}
		}
	}

	&--is-back-btn {
		float: left;
		margin-left: $spacing-default;
		font-size: 0.75rem;
		min-width: unset;
		border-radius: 50%;
		padding: 0;
		height: 2.75rem;
		width: 2.75rem;

		body.is-light &, body.is-light.has-cards .card &, body.is-dark.has-cards & {
			@include cta-colors($colors-light, $suffix: "-light");
		}

		body.is-dark &, body.is-dark.has-cards .card &, body.is-light.has-cards & {
			@include cta-colors($colors-dark, $suffix: "-light");
		}
	}

	&--is-add-btn {
		float: right;
		margin-right: $spacing-default;
		min-width: unset;
		border-radius: 50%;
		padding: 0;
		height: 2.75rem;
		width: 2.75rem;
		background-repeat: no-repeat;
		background-size: 75%;
		background-position: center center;
		background-clip: border-box;
		-moz-background-clip: border-box;
		-webkit-background-clip: border-box;
		flex-shrink: 0;
		align-self: flex-end;

		body.is-light &, body.is-light.has-cards .card &, body.is-dark.has-cards & {
			@include background-svg(check-box-check($fill-color: theme-light('cta-text'), $stroke-width: 0.6, $rotation: 45));
		}

		body.is-dark &, body.is-dark.has-cards .card &, body.is-light.has-cards & {
			@include background-svg(check-box-check($fill-color: theme-dark('cta-text'), $stroke-width: 0.6, $rotation: 45));
		}

		&:hover, &:focus {
			&:not(:disabled) {
				body.is-light &, body.is-light.has-cards .card &, body.is-dark.has-cards & {
					@include background-svg(check-box-check($fill-color: theme-light('cta-bg'), $stroke-width: 0.6, $rotation: 45));
				}

				body.is-dark &, body.is-dark.has-cards .card &, body.is-light.has-cards & {
					@include background-svg(check-box-check($fill-color: theme-dark('cta-bg'), $stroke-width: 0.6, $rotation: 45));
				}
			}
		}
	}

	&__text {
		body.is-light &, body.is-dark &{
			color: inherit;
		}
	}

	&:disabled {
		@include disabled;
	}

	svg {
		stroke: inherit;
	}


	form.centered & {
		margin-top: rem(10px);
	}

	form.big &, form.centered & {
		margin-left: auto;
		margin-right: auto;
	}

	&--is-arrow {
		text-decoration: none;
		font-weight: bold;
		vertical-align: middle;
		border-radius: 50%;
		height: rem(40px);
		width: auto;
		padding: 0rem;
		display: inline-flex;
		justify-content: center;
		align-content: center;

		&--is-small {
			height: 1.75rem;
		}

		&--is-medium {
			height: 2rem;
		}

		svg {
			height: 100%;
			vertical-align: middle;
			fill: transparent;
			stroke-width: 15;
			stroke-linecap: round;
			transform-origin: center;
			transition: transform 0.5s ease-in-out;
		}
	}
}

.dropdown.title-as-button > .dropdown-title {
	cursor: pointer;
}

.toggle-switch {
	display: inline-flex;

	&__btn {
		border-radius: 0;
		border: 3px solid;
		background-color: transparent;

		body.is-light &, body.is-light.has-cards .card &, body.is-dark.has-cards & {
			@include cta-background-colors($colors-light, $property: border-color);
			@include cta-background-colors($colors-light, $property: color);

			&[aria-pressed=true], &:not(:disabled):hover, &:not(:disabled):focus {
				background-color: theme-light('cta-bg');
				border-color: theme-light('cta-bg');
				color: theme-light('cta-text');
			}
		}

		body.is-dark &, body.is-dark.has-cards .card &, body.is-light.has-cards & {
			@include cta-background-colors($colors-dark, $property: border-color);
			@include cta-background-colors($colors-dark, $property: color);

			&[aria-pressed=true], &:not(:disabled):hover, &:not(:disabled):focus {
				background-color: theme-dark('cta-bg');
				border-color: theme-dark('cta-bg');
				color: theme-dark('cta-text');
			}
		}

		&:first-child {
			border-top-left-radius: $default-border-radius;
			border-bottom-left-radius: $default-border-radius;
		}

		&:last-child {
			border-top-right-radius: $default-border-radius;
			border-bottom-right-radius: $default-border-radius;
		}
	}
}

button.vs__deselect{
	fill: theme-light("cta-bg");

	&:hover, &:focus {
		background-color: transparent;
		fill: theme-light("cta-bg-light");
	}
}

.button-list {
	width: 100%;
	max-width: $constrained-width;
	display: flex;
	flex-wrap: wrap;
	align-items: stretch;
	align-content: start;
	justify-content: space-around;
	margin-inline-start: 0;
	margin-block-start: 0;
	padding-inline-start: 0;
	list-style-type: none;
	@include centered;

	&__item {
		flex-grow: 0;
		flex-basis: 50%;
		flex-shrink: 0;
		padding: $spacing-default;
		text-align: center;
		width: 0;
	}
}
